{"version":3,"file":"notesBundle.js.map","sources":["../src/filestructure/entry.ts","../src/filestructure/note.ts","../src/filestructure/folder.ts","../src/notes.ts"],"sourcesContent":["export class Entry {\n    constructor(url:string, name?:string, parent?:Entry) {\n        this.url = url;\n        if(name) this.name = name;\n        if(parent) this.parent = parent;\n    }\n    public readonly name: string;\n    public readonly url: string;\n    readonly parent: Entry;\n}\n\n//----------------------------- Helpers -----------------------------------\n\n","import {Entry} from \"./entry\";\nimport {proxyURL, sessionID} from \"../notes\";\n\nexport class Note extends Entry {\n\n    private content: string;\n    private etag: string;\n    async getContent(): Promise<string> {\n        if (!this.content) {\n            const result = await makeFileGetRequest(this.url);\n            this.content = result.content || \"\";\n            this.etag = result.etag || \"\";\n        }\n        return this.content;\n    }\n\n}\n\n\n//----------------------------- Helpers -----------------------------------\n\nasync function makeFileGetRequest(url: string):Promise<any> {\n    const response = await fetch(`${proxyURL}/get_file`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            sessionID: sessionID,\n            url: url\n        })\n    });\n    if (response.ok) {\n        return response.json();\n    } else {\n        console.error(\"Error making propfind request:\", response.statusText);\n        return [];\n    }\n}\n","import {Entry} from \"./entry\";\nimport {baseURL, proxyURL, sessionID} from \"../notes\";\nimport {Note} from \"./note\";\n\nexport class Folder extends Entry{\n    private entries:Entry[];\n    public async getEntries():Promise<Entry[]> {\n        const url = new URL(baseURL);\n        const serverURL = url.origin;\n        if(!this.entries){\n            const response = await makePropfindRequest(this.url);\n            response.shift();\n            this.entries = [];\n            for (const entry of response) {\n                if (entry.href.endsWith(\"/\")) {\n                    this.entries.push(new Folder(serverURL + entry.href, entry.href.split(\"/\").slice(-2, -1)[0], this));\n                } else if (entry.href.endsWith(\".md\") || entry.href.endsWith(\".txt\")) {\n                    this.entries.push(new Note(serverURL + entry.href, entry.href.split(\"/\").pop(), this));\n                }\n            }\n            console.log(this.entries);\n        }\n        return this.entries;\n    }\n    public async createFolder(name: string):Promise<Folder> {\n        const response = await makeCreateFolderRequest(this.url + \"/\" + name);\n        if(response){\n            const newFolder:Folder = new Folder(this.url + \"/\" + name, name, this);\n            this.entries.push(newFolder);\n            return newFolder;\n        }\n        return null;\n    }\n    public async createNote(name: string):Promise<Note> {\n        const response = await makeCreateNoteRequest(this.url + \"/\" + name, \"hello world\");\n        if(response){\n            const newNote:Note = new Note(this.url + \"/\" + name, name, this);\n            this.entries.push(newNote);\n            return newNote;\n        }\n        return null;\n    }\n}\n\n\n\n\n//----------------------------- Helpers -----------------------------------\n\nasync function makePropfindRequest(url: string):Promise<any> {\n    const response = await fetch(`${proxyURL}/propfind`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            sessionID: sessionID,\n            url: url,\n        })\n    });\n    if (response.ok) {\n        return response.json();\n    } else {\n        console.error(\"Error making propfind request:\", response.statusText);\n        return [];\n    }\n}\nasync function makeCreateFolderRequest(url: string):Promise<boolean> {\n    const response = await fetch(`${proxyURL}/create_folder`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            sessionID: sessionID,\n            url: url,\n        })\n    });\n    if (response.ok) {\n        return true;\n    } else {\n        console.error(\"Error making create request:\", response.statusText);\n        return false;\n    }\n}\nasync function makeCreateNoteRequest(url: string, initData: string):Promise<boolean> {\n    const response = await fetch(`${proxyURL}/create_file`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            sessionID: sessionID,\n            url: url,\n            data: initData,\n        })\n    });\n    if (response.ok) {\n        return true;\n    } else {\n        console.error(\"Error making create request:\", response.statusText);\n        return false;\n    }\n}\n","// import EditorJS, {BlockToolConstructable, InlineToolConstructable} from '@editorjs/editorjs';\n// import Header from '@editorjs/header';\n// import RawTool from '@editorjs/raw';\n// import EditorjsList from '@editorjs/list';\n//\n// import {EditorState} from \"@codemirror/state\"\n// import {EditorView, keymap} from \"@codemirror/view\"\n// import {defaultKeymap} from \"@codemirror/commands\"\n//\n// import Quill from 'quill';\n\nimport {Folder} from \"./filestructure/folder\";\nimport {Entry} from \"./filestructure/entry\";\nimport {Note} from \"./filestructure/note\";\n\nexport const proxyURL:string = \"http://localhost:3000\";\nexport let sessionID:string = null;\nexport let baseURL:string = null;\n\n//----------------------------- Notes -----------------------------------\n// const editor = new EditorJS({\n//     holder: 'editorjs',\n//     tools: {\n//         header: {\n//             class: Header as unknown as BlockToolConstructable,\n//             inlineToolbar: ['link']\n//         },\n//         list: {\n//             class: EditorjsList as unknown as BlockToolConstructable,\n//             inlineToolbar: true,\n//             config: {\n//                 defaultStyle: 'unordered',\n//             }\n//         },\n//         raw: {\n//             class: RawTool as unknown as BlockToolConstructable\n//         },\n//\n//     }\n// });\n\n\n\n\n\n\n//----------------------------- Login -----------------------------------\nconst login_status:HTMLElement = document.getElementById('login_status');\n\nasync function login(serverUrl: string, username: string, password: string):Promise<string> {\n    const response = await fetch(`${proxyURL}/login?serverUrl=${encodeURIComponent(serverUrl)}&username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`, {\n        method: \"GET\",\n    });\n    if (!response.ok) {\n        console.error(\"Error logging in:\" + response.statusText);\n        return null;\n    } else {\n        return response.text();\n    }\n}\nasync function loginToServer(remember: boolean = false) {\n    login_status.textContent = \"Login started...\";\n    const url:string = (document.getElementById('url_input') as HTMLInputElement).value.trim();\n    const url_notes:string = (document.getElementById('url_input_notes') as HTMLInputElement).value.trim();\n    const username:string = (document.getElementById('username_input') as HTMLInputElement).value.trim();\n    const password:string = (document.getElementById('password_input') as HTMLInputElement).value.trim();\n    if (!username || !password || !url) {\n        login_status.textContent = \"Please fill in all fields\";\n        return;\n    }\n    sessionID = await login(url, username, password);\n    if (sessionID === null) {\n        login_status.textContent = \"Login failed\";\n    } else {\n        baseURL = url_notes;\n        login_status.textContent = \"Login successful\";\n        document.getElementById('big_login_status').style.display = \"none\";\n        fetchAndDisplay();\n    }\n    if (remember) {\n        localStorage.setItem(\"url\", url);\n        localStorage.setItem('url_notes', url_notes);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"password\", password);\n    }\n}\nasync function autoLogin() {\n    const url:string = localStorage.getItem(\"url\");\n    const url_notes:string = localStorage.getItem(\"url_notes\");\n    const username:string = localStorage.getItem(\"username\");\n    const password:string = localStorage.getItem(\"password\");\n    if (url && url_notes && username && password) {\n        (document.getElementById('url_input') as HTMLInputElement).value = url;\n        (document.getElementById('url_input_notes') as HTMLInputElement).value = url_notes;\n        (document.getElementById('username_input') as HTMLInputElement).value = username;\n        (document.getElementById('password_input') as HTMLInputElement).value = password;\n        loginToServer();\n    }\n}\nautoLogin()\n\n\n\n//----------------------------- UI -----------------------------------\nconst notesDiv:HTMLElement = document.getElementById('notes');\n\nasync function fetchAndDisplay() {\n    //Create root directory entries\n    const rootFolder:Folder = new Folder(baseURL, \"Notes\");\n    const remoteNotes1Div:HTMLElement = document.createElement('div');\n    await createFolderDiv(rootFolder, remoteNotes1Div);\n    notesDiv.appendChild(remoteNotes1Div);\n\n}\n\nasync function createFolderDiv(rootFolder:Folder, rootDiv:HTMLElement) {\n    const folder_div:HTMLElement = document.createElement('div');\n    const heading = document.createElement('h2');\n    heading.textContent = rootFolder.name;\n    //New Task/Folder Buttons\n    const newNoteButton:HTMLButtonElement = document.createElement('button');\n    newNoteButton.className = 'button';\n    newNoteButton.style.marginLeft = \"70%\";\n    newNoteButton.textContent = \"New Note\";\n    newNoteButton.addEventListener('click', async () => {\n        const newNote = await rootFolder.createNote(\"New Note.txt\");\n        folder_div.appendChild(createTitleNoteDiv(newNote, rootDiv));\n    });\n    const newFolderButton:HTMLButtonElement = document.createElement('button');\n    newFolderButton.className = 'button';\n    newFolderButton.textContent = \"New Folder\";\n    newFolderButton.addEventListener('click', async () => {\n        const newFolder = await rootFolder.createFolder(\"New Folder\");\n        folder_div.appendChild(createTitleFolderDiv(newFolder, rootDiv));\n    });\n    heading.appendChild(newNoteButton);\n    const seperator:HTMLElement = document.createElement('span');\n    seperator.textContent = \" | \";\n    heading.appendChild(seperator);\n    heading.appendChild(newFolderButton);\n    folder_div.appendChild(heading);\n    //Entries\n    const rootEntries:Entry[] = await rootFolder.getEntries();\n    for (const entry of rootEntries) {\n\n        if (entry instanceof Folder) {\n            folder_div.appendChild(createTitleFolderDiv(entry, rootDiv));\n        } else if (entry instanceof Note) {\n            folder_div.appendChild(createTitleNoteDiv(entry, rootDiv));\n        }\n    }\n    rootDiv.appendChild(folder_div);\n}\n\nfunction createTitleFolderDiv(folder:Folder, rootDiv:HTMLElement):HTMLElement {\n    const entryDiv:HTMLElement = document.createElement('div');\n    entryDiv.className = 'folder';\n    entryDiv.textContent = \"📁 \" + folder.name;\n    entryDiv.addEventListener('click', async () => {\n        rootDiv.innerHTML = '';\n        await createFolderDiv(folder, rootDiv);\n    })\n    return entryDiv;\n}\nfunction createTitleNoteDiv(note:Note, rootDiv:HTMLElement):HTMLElement {\n    const entryDiv:HTMLElement = document.createElement('div');\n    entryDiv.className = 'note';\n    entryDiv.textContent = \"🗒 \" + note.name;\n    entryDiv.addEventListener('click', async () => {\n        rootDiv.textContent = await note.getContent();\n    })\n    return entryDiv;\n}\n\n\n\n//----------------------------- Buttons -----------------------------------\nconst settingsButton:HTMLButtonElement = document.getElementById('settings_button') as HTMLButtonElement;\nconst popup:HTMLElement = document.getElementById('settings');\n\nsettingsButton.addEventListener('click', () => {\n    popup.style.display = popup.style.display === '' || popup.style.display === 'none' ? 'block' : 'none';\n});\ndocument.addEventListener('click', (event) => {\n    // @ts-ignore\n    if (popup.style.display === 'block' && !popup.contains(event.target) && !settingsButton.contains(event.target)) {\n        popup.style.display = 'none';\n    }\n});\ndocument.addEventListener('keydown', (event) => {\n    if (event.key === 'Escape') {\n        popup.style.display = 'none';\n    }\n});\ndocument.getElementById('login_button').addEventListener('click', () => {\n    loginToServer();\n});\ndocument.getElementById('login_remember_button').addEventListener('click', () => {\n    loginToServer(true);\n});\n\ndocument.getElementById('login_forget_button').addEventListener('click', () => {\n    //ToDo clear content\n    localStorage.removeItem('url');\n    localStorage.removeItem('url_notes');\n    localStorage.removeItem('username');\n    localStorage.removeItem('password');\n    document.getElementById('big_login_status').style.display = \"block\";\n});\n\n"],"names":["Entry","constructor","url","name","parent","this","Note","getContent","content","result","async","response","fetch","proxyURL","method","headers","body","JSON","stringify","sessionID","ok","json","console","error","statusText","makeFileGetRequest","etag","Folder","getEntries","serverURL","URL","baseURL","origin","entries","makePropfindRequest","shift","entry","href","endsWith","push","split","slice","pop","log","createFolder","makeCreateFolderRequest","newFolder","createNote","initData","data","makeCreateNoteRequest","newNote","login_status","document","getElementById","loginToServer","remember","textContent","value","trim","url_notes","username","password","serverUrl","encodeURIComponent","text","login","style","display","rootFolder","remoteNotes1Div","createElement","createFolderDiv","notesDiv","appendChild","fetchAndDisplay","localStorage","setItem","getItem","autoLogin","rootDiv","folder_div","heading","newNoteButton","className","marginLeft","addEventListener","createTitleNoteDiv","newFolderButton","createTitleFolderDiv","seperator","rootEntries","folder","entryDiv","innerHTML","note","settingsButton","popup","event","contains","target","key","removeItem"],"mappings":"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"}