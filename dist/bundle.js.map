{"version":3,"file":"bundle.js.map","sources":["../src/task.ts","../src/tasksList.ts"],"sourcesContent":["export class Task {\n    constructor(dataOrSummary: string, etag?: string, url?: string, localTask?: boolean) {\n         if (etag && url) {\n             this.data = dataOrSummary;\n             this.etag = etag;\n             this.url = url;\n             this.summary = getInfoFromICal(dataOrSummary).summary;\n             this.uuid = getInfoFromICal(dataOrSummary).uid;\n             this.created = getInfoFromICal(dataOrSummary).created;\n             this.lastModified = getInfoFromICal(dataOrSummary).lastModified;\n             this.dtstamp = getInfoFromICal(dataOrSummary).dtstamp;\n             this.localTask = false;\n             this.completed = getInfoFromICal(dataOrSummary).completed;\n         } else {\n             this.summary = dataOrSummary;\n             this.localTask = true;\n         }\n         if (localTask != null) {\n                this.localTask = localTask;\n         }\n     }\n    private summary: string;\n    private data: string;\n    etag: string;\n    uuid: string;\n    created: string;\n    lastModified: string;\n    dtstamp: string;\n    completed: boolean;\n    private url: string;\n    public readonly localTask: boolean;\n    //------------------\n    public setDone():void {\n        if (!this.localTask) {\n            this.data = null;\n        }\n        this.completed = true;\n    }\n    public setNotDone():void {\n        if (!this.localTask) {\n            this.data = null;\n        }\n        this.completed = false;\n    }\n    public getUrl():string {\n        if (this.url) {\n            return this.url;\n        }\n        this.url = this.summary + '_' + Math.random().toString(36).substring(2, 7) + '.ics';\n        return this.url;\n    }\n    public setUrl(url:string):void {\n        this.url = url;\n    }\n    public getData():string {\n        if (this.data) {\n            return this.data;\n        }\n        if(!this.uuid) {\n            this.uuid = crypto.randomUUID();\n        }\n        if (!this.created) {\n            this.created = formatDateForICS();\n        }\n        if (!this.lastModified) {\n            this.lastModified = formatDateForICS();\n        }\n        if (!this.dtstamp) {\n            this.dtstamp = formatDateForICS();\n        }\n        return 'BEGIN:VCALENDAR\\n' + 'VERSION:2.0\\n' +\n            'PRODID:-//Simple Task Client 0.1\\n' +\n            'BEGIN:VTODO\\n' +\n            'UID:' + this.uuid + '\\n' +\n            'CREATED:' + this.created + '\\n' +\n            'LAST-MODIFIED:' + this.lastModified + '\\n' +\n            'DTSTAMP:' + this.dtstamp + '\\n' +\n            'SUMMARY:' + this.summary + '\\n' +\n            (this.completed ? 'STATUS:COMPLETED\\n' : '') +\n            'END:VTODO\\n' +\n            'END:VCALENDAR'\n    }\n    public updateTaskName(name:string):void {\n        this.summary = name;\n        if (!this.localTask) {\n            this.data = null;\n        }\n    }\n    public getSummary():string {\n        return this.summary;\n    }\n}\n\n//----------------------------- Helpers -----------------------------------\nfunction getInfoFromICal(ical: string):{summary: string, uid: string, created: string, lastModified: string, dtstamp: string, completed: boolean} {\n    let data = null;\n    const regex = /BEGIN:VTODO[\\s\\S]*?END:VTODO/g;\n    const matches = ical.match(regex);\n    if (matches) {\n        matches.forEach((match) => {\n            const uid:string = RegExp(/UID:(.*)/).exec(match)[1].trim();\n            const created:string = RegExp(/CREATED:(.*)/).exec(match)[1].trim();\n            const lastModified:string = RegExp(/LAST-MODIFIED:(.*)/).exec(match)[1].trim();\n            const dtstamp:string = RegExp(/DTSTAMP:(.*)/).exec(match)[1].trim();\n            const summary:string = RegExp(/SUMMARY:(.*)/).exec(match)[1].trim();\n            const statusMatch = RegExp(/STATUS:(.*)/).exec(match);\n            const status:string = statusMatch ? statusMatch[1].trim() : null;\n            let completed:boolean = false;\n            if (status && status === 'COMPLETED') {\n                completed = true;\n            }\n            data = {uid, created, lastModified, dtstamp, summary, completed };\n        });\n    }\n    return data;\n}\nfunction formatDateForICS() {\n    return new Date().toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';\n}\n","import {Task} from \"./task\";\n\n//const proxyURL:string = \"http://localhost:3000\"\n//const proxyURL:string = \"http://192.168.188.99:3002\"\nconst proxyURL:string = \"https://task-backend.nyxnord.de\";\nlet sessionID:string = null;\n\n//----------------------------- Proxy Communication -----------------------------------\n\nasync function login(serverUrl: string, username: string, password: string):Promise<string> {\n  const response = await fetch(`${proxyURL}/login?serverUrl=${encodeURIComponent(serverUrl)}&username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`, {\n    method: \"GET\",\n  });\n  if (!response.ok) {\n      console.error(\"Error logging in:\" + response.statusText);\n      return null;\n  } else {\n    return response.text();\n  }\n}\nasync function getCalenders():Promise<any[]> {\n    const response = await fetch(`${proxyURL}/tasklists?sessionID=${encodeURIComponent(sessionID)}`, {\n    method: \"GET\",\n    });\n    if (!response.ok) {\n        console.error(\"Error getting calendars:\" + response.statusText);\n        return null;\n    } else {\n        return response.json();\n    }\n}\nasync function fetchTasks(calender: JSON) {\n     const response = await fetch(`${proxyURL}/tasks?sessionID=${encodeURIComponent(sessionID)}&calender=${encodeURIComponent(JSON.stringify(calender))}`, {\n        method: \"GET\",\n    });\n    if (!response.ok) {\n        console.error(\"Error getting tasks:\" + response.statusText);\n        return null;\n    } else {\n        return response.json();\n    }\n}\nasync function updateRemoteTask(task:Task) {\n    if (!task.localTask) {\n        const response = await fetch(`${proxyURL}/update_task`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                sessionID: sessionID,\n                filename: task.getUrl(),\n                data: task.getData(),\n                etag: task.etag,\n            })\n        });\n        if (response.ok) {\n            task.etag = await response.text();\n        }\n        return response.ok;\n    }\n}\nasync function deleteTask(task:Task, task_div:HTMLElement) {\n    if (task.localTask) {\n        localTasks = localTasks.filter(t => t !== task);\n        local_task_list.removeChild(task_div);\n        await saveLocalTasks();\n    } else {\n        try {\n            const response = await fetch(`${proxyURL}/delete_task`, {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    sessionID: sessionID,\n                    filename: task.getUrl(),\n                    etag: task.etag,\n                })\n            });\n            if (response.ok) {\n                task_div.parentElement.removeChild(task_div);\n                return true;\n            }\n        } catch (err) {\n            console.error(\"Error deleting task:\", err);\n        }\n        return false;\n    }\n}\nasync function createRemoteTask(calendar: any, task: Task) {\n    const response = await fetch(`${proxyURL}/create_task`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            sessionID: sessionID,\n            calendar: calendar,\n            filename: task.getUrl(),\n            data: task.getData(),\n        })\n    });\n    if (response.ok) {\n      task.etag = await response.text();        //ToDo create task on popup close\n      const tasks = await fetchTasks(calendar);\n        for (const object of tasks) {\n            if (object.etag === task.etag) {\n                task.setUrl(object.url);\n            }\n        }\n    }\n    return response.ok;\n}\n\n//----------------------------- Login -----------------------------------\nconst login_status:HTMLElement = document.getElementById('login_status');\n\nasync function loginToServer(remember: boolean = false) {\n    login_status.textContent = \"Login started...\";\n    const url:string = (document.getElementById('url_input') as HTMLInputElement).value.trim();\n    const username:string = (document.getElementById('username_input') as HTMLInputElement).value.trim();\n    const password:string = (document.getElementById('password_input') as HTMLInputElement).value.trim();\n    if (!username || !password || !url) {\n        login_status.textContent = \"Please fill in all fields\";\n        return;\n    }\n    sessionID = await login(url, username, password);\n    if (sessionID === null) {\n        login_status.textContent = \"Login failed\";\n    } else {\n        login_status.textContent = \"Login successful\";\n        document.getElementById('big_login_status').style.display = \"none\";\n        fetchAndDisplay();\n    }\n    if (remember) {\n        localStorage.setItem(\"url\", url);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"password\", password);\n    }\n}\nasync function autoLogin() {\n    const url:string = localStorage.getItem(\"url\");\n    const username:string = localStorage.getItem(\"username\");\n    const password:string = localStorage.getItem(\"password\");\n    if (url && username && password) {\n        (document.getElementById('url_input') as HTMLInputElement).value = url;\n        (document.getElementById('username_input') as HTMLInputElement).value = username;\n        (document.getElementById('password_input') as HTMLInputElement).value = password;\n        loginToServer();\n    }\n}\nautoLogin()\n\n//----------------------------- Show Remote Tasks -----------------------------------\nconst task_list:HTMLElement = document.getElementById('task_list');\n\nasync function fetchAndDisplay():Promise<void> {\n    if (!sessionID) {return}\n    const calendars: any[] = await getCalenders();\n    for (const calendar of calendars) {\n        let calendar_div:HTMLElement = document.createElement('div');\n        const heading = document.createElement('h2');\n        heading.textContent = calendar.displayName;\n        //New Task Button\n        const newTaskButton:HTMLButtonElement = document.createElement('button');\n        newTaskButton.className = 'button';\n        newTaskButton.style.marginLeft = \"70%\";\n        newTaskButton.textContent = \"New Task\";\n        newTaskButton.addEventListener('click', async () => {\n            const task = new Task(\"New Task\", null, null, false);\n            const success:boolean = await createRemoteTask(calendar, task);\n            if (success) {\n                calendar_div.appendChild(buildDisplayableTask(task, true))\n            }\n        });\n        heading.appendChild(newTaskButton);\n        calendar_div.appendChild(heading);\n        const objects = await fetchTasks(calendar);\n        for (const object of objects) {\n            //console.log(object);\n            const task = new Task(object.data, object.etag, object.url);\n            calendar_div.appendChild(buildDisplayableTask(task));\n        }\n        task_list.appendChild(calendar_div);\n    }\n}\n\n//----------------------------- Local Tasks -----------------------------------\nconst local_task_list:HTMLElement = document.getElementById('local_task_list');\nlet localTasks:Task[] = null;\n\nasync function saveLocalTasks() {\n    localStorage.setItem(\"local_tasks\", JSON.stringify(localTasks));\n}\nfunction recoverSavedTasks():void {\n    const savedTasks = JSON.parse(localStorage.getItem(\"local_tasks\"));\n    if (savedTasks === null || savedTasks.length === 0) {\n        localTasks = [];\n        localTasks.push(new Task(\"This is your first task!\"));\n    } else {\n        // Reconstruct Task objects from plain objects\n        localTasks = savedTasks.map(taskData => {\n            const task = new Task(taskData.summary);\n            Object.assign(task, taskData);\n            return task;\n        });\n    }\n}\nfunction displaySavedTasks():void {\n    local_task_list.innerHTML = '';\n    for (const task of localTasks) {\n        local_task_list.appendChild(buildDisplayableTask(task));\n    }\n}\n\ndocument.getElementById('create_local_button').addEventListener('click', () => {\n    const task = new Task(\"New Task\");\n    localTasks.push(task);\n    saveLocalTasks();\n    local_task_list.appendChild(buildDisplayableTask(task, true));\n})\n\nrecoverSavedTasks();\ndisplaySavedTasks();\n\n//----------------------------- Build Task -----------------------------------\n\nfunction buildDisplayableTask(task: Task, fresh:boolean = false):HTMLElement {\n    let task_div:HTMLElement = document.createElement('div');\n    task_div.className = \"task\";\n    let checkbox:HTMLInputElement = document.createElement('input');\n    checkbox.type = \"checkbox\";\n    checkbox.className = \"task_checkbox\";\n    checkbox.checked = task.completed;\n    checkbox.addEventListener('change', () => {\n        if (checkbox.checked) {\n            task.setDone();\n        } else {\n            task.setNotDone();\n        }\n        updateRemoteTask(task);\n        saveLocalTasks();\n    })\n    task_div.appendChild(checkbox);\n    let textSpan:HTMLSpanElement = document.createElement('span');\n    textSpan.textContent = \" \" + task.getSummary();\n    textSpan.style.width = \"100%\";\n    //Editing\n    let task_edit:HTMLElement = document.createElement('div');\n    task_edit.className = \"popup\";\n    let name_edit_label:HTMLLabelElement = document.createElement('label');\n    let name_edit:HTMLInputElement = document.createElement('input');\n    let delete_edit:HTMLButtonElement = document.createElement('button');\n\n    const name_edit_label_text:HTMLSpanElement = document.createElement('span');\n    name_edit_label_text.textContent = \"Edit Name: \";\n    name_edit_label.appendChild(name_edit_label_text);\n    name_edit_label.appendChild(name_edit);\n    name_edit.value = task.getSummary();\n    name_edit.addEventListener('change', () => {\n        task.updateTaskName(name_edit.value);\n        textSpan.textContent = \" \" + task.getSummary();\n    })\n\n    delete_edit.className = \"button\";\n    delete_edit.textContent = \"Delete Task\";\n    delete_edit.style.color = \"#c21919\";\n    delete_edit.addEventListener('click', () => {\n        task_edit.style.display = 'none';\n        document.removeEventListener('keydown', keyHandler);\n        document.removeEventListener('click', clickHandler);\n        deleteTask(task, task_div);\n    })\n\n    task_edit.appendChild(name_edit_label);\n    task_edit.appendChild(document.createElement('br'));\n    task_edit.appendChild(document.createElement('br'));\n    task_edit.appendChild(delete_edit);\n    // close/open edit window\n    const keyHandler = (e) => {\n        if (e.key === 'Escape') {\n            task_edit.style.display = 'none';\n            document.removeEventListener('keydown', keyHandler);\n            document.removeEventListener('click', clickHandler);\n            updateRemoteTask(task);\n            saveLocalTasks();\n            displaySavedTasks();\n        }\n    };\n    const clickHandler = (e) => {\n        if (!task_edit.contains(e.target) && e.target !== textSpan) {\n            task_edit.style.display = 'none';\n            document.removeEventListener('keydown', keyHandler);\n            document.removeEventListener('click', clickHandler);\n            updateRemoteTask(task);\n            saveLocalTasks();\n            displaySavedTasks();\n        }\n    };\n    textSpan.addEventListener('click', () => {\n        task_edit.style.display = \"block\";\n        setTimeout(() => {  //slight delay to avoid immediate triggering\n            document.addEventListener('keydown', keyHandler);\n            document.addEventListener('click', clickHandler);\n        }, 10);\n    });\n    if (fresh) {\n        task_edit.style.display = \"block\";\n        setTimeout(() => {\n            document.addEventListener('keydown', keyHandler);\n            document.addEventListener('click', clickHandler);\n        }, 10);\n    }\n    task_div.appendChild(textSpan);\n    task_div.appendChild(task_edit);\n    return task_div;\n}\n\n//----------------------------- Buttons -----------------------------------\nconst settingsButton:HTMLButtonElement = document.getElementById('settings_button') as HTMLButtonElement;\nconst popup:HTMLElement = document.getElementById('settings');\n\nsettingsButton.addEventListener('click', () => {\n    popup.style.display = popup.style.display === '' || popup.style.display === 'none' ? 'block' : 'none';\n});\ndocument.addEventListener('click', (event) => {\n    // @ts-ignore\n    if (popup.style.display === 'block' && !popup.contains(event.target) && !settingsButton.contains(event.target)) {\n        popup.style.display = 'none';\n    }\n});\ndocument.addEventListener('keydown', (event) => {\n    if (event.key === 'Escape') {\n        popup.style.display = 'none';\n    }\n});\n\ndocument.getElementById('login_button').addEventListener('click', () => {\n    loginToServer();\n});\ndocument.getElementById('login_remember_button').addEventListener('click', () => {\n    loginToServer(true);\n});\n"],"names":["Task","constructor","dataOrSummary","etag","url","localTask","this","data","summary","getInfoFromICal","uuid","uid","created","lastModified","dtstamp","completed","setDone","setNotDone","getUrl","Math","random","toString","substring","setUrl","getData","crypto","randomUUID","formatDateForICS","updateTaskName","name","getSummary","ical","matches","match","forEach","RegExp","exec","trim","statusMatch","status","Date","toISOString","replace","split","proxyURL","sessionID","async","fetchTasks","calender","response","fetch","encodeURIComponent","JSON","stringify","method","ok","json","console","error","statusText","updateRemoteTask","task","headers","body","filename","text","createRemoteTask","calendar","tasks","object","login_status","document","getElementById","loginToServer","remember","textContent","value","username","password","serverUrl","login","style","display","calendars","getCalenders","calendar_div","createElement","heading","displayName","newTaskButton","className","marginLeft","addEventListener","appendChild","buildDisplayableTask","objects","task_list","fetchAndDisplay","localStorage","setItem","getItem","autoLogin","local_task_list","localTasks","saveLocalTasks","displaySavedTasks","innerHTML","fresh","task_div","checkbox","type","checked","textSpan","width","task_edit","name_edit_label","name_edit","delete_edit","name_edit_label_text","color","removeEventListener","keyHandler","clickHandler","parentElement","removeChild","err","filter","t","deleteTask","e","key","contains","target","setTimeout","push","savedTasks","parse","length","map","taskData","Object","assign","recoverSavedTasks","settingsButton","popup","event"],"mappings":"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"}