{"version":3,"file":"bundle.js.map","sources":["../src/task.ts","../src/tasksList.ts"],"sourcesContent":["export class Task {\n    constructor(dataOrSummary: string, etag?: string, url?: string) {\n         if (etag && url) {\n             this.data = dataOrSummary;\n             this.etag = etag;\n             this.url = url;\n             this.summary = getInfoFromICal(dataOrSummary).summary;\n             this.localTask = false;\n         } else {\n             this.summary = dataOrSummary;\n             this.localTask = true;\n         }\n     }\n    summary: string;\n    data: string;\n    etag: string;\n    url: string;\n    localTask: boolean;\n    //------------------\n    done:boolean = false;\n    public setDone():void {\n        this.done = true;\n    }\n    public setNotDone():void {\n        this.done = false;\n    }\n}\n\n//----------------------------- Helpers -----------------------------------\nfunction getInfoFromICal(ical: string):{summary: string, uid: string, created: string, lastModified: string, dtstamp: string} {\n    let data = null;\n    const regex = /BEGIN:VTODO[\\s\\S]*?END:VTODO/g;\n    const matches = ical.match(regex);\n    if (matches) {\n        matches.forEach((match) => {\n            const uid = match.match(/UID:(.*)/)[1].trim();\n            const created = match.match(/CREATED:(.*)/)[1].trim();\n            const lastModified = match.match(/LAST-MODIFIED:(.*)/)[1].trim();\n            const dtstamp = match.match(/DTSTAMP:(.*)/)[1].trim();\n            const summary = match.match(/SUMMARY:(.*)/)[1].trim();\n            data = {uid, created, lastModified, dtstamp, summary };\n        });\n    }\n    return data;\n}\n","import {Task} from \"./task\";\n\nconst proxyURL: string = \"http://localhost:3000\"\nlet sessionID: string = null;\n\n//----------------------------- Proxy Communication -----------------------------------\n\nasync function login(serverUrl: string, username: string, password: string):Promise<string> {\n  const response = await fetch(`${proxyURL}/login?serverUrl=${encodeURIComponent(serverUrl)}&username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`, {\n    method: \"GET\",\n  });\n  if (!response.ok) {\n      console.error(\"Error logging in:\" + response.statusText);\n      return null;\n  } else {\n    return response.text();\n  }\n}\nasync function getCalenders():Promise<any[]> {\n    const response = await fetch(`${proxyURL}/tasklists?sessionID=${encodeURIComponent(sessionID)}`, {\n    method: \"GET\",\n    });\n    if (!response.ok) {\n        console.error(\"Error getting calendars:\" + response.statusText);\n        return null;\n    } else {\n        return response.json();\n    }\n}\nasync function fetchTasks(calender: JSON) {\n     const response = await fetch(`${proxyURL}/tasks?sessionID=${encodeURIComponent(sessionID)}&calender=${encodeURIComponent(JSON.stringify(calender))}`, {\n        method: \"GET\",\n    });\n    if (!response.ok) {\n        console.error(\"Error getting tasks:\" + response.statusText);\n        return null;\n    } else {\n        return response.json();\n    }\n}\n\n// (async () => {\n// sessionID = await login('https://cloud.aurora.dedyn.io/remote.php/dav', 'PSE Test', 'YOUR_APP_SPECIFIC_PASSWORD');\n// const calendars = await getCalenders();\n// // @ts-ignore\n//     for (const calendar of calendars) {\n//     const objects = await fetchTasks(calendar);\n//     console.log(objects);\n// }\n\n// const items = await fetchTasks(client, calendars[0]);\n// const result = await createTask(client, calendars[0], \"Test10\")\n\n// console.log(sessionID);\n// console.log(calendars);\n// // console.log(\"---------------------------------\");\n// // console.log(items);\n// // console.log(\"---------------------------------\");\n// // console.log(result);\n// })();\n\nasync function changeTaskName(task:Task, name:string) {\n    task.summary = name;\n    if (!task.localTask) {\n        //ToDo\n    }\n}\n\n//----------------------------- Login -----------------------------------\nconst login_status:HTMLElement = document.getElementById('login_status');\n\nasync function loginToServer(remember: boolean = false) {\n    login_status.textContent = \"Login started...\";\n    const url:string = (document.getElementById('url_input') as HTMLInputElement).value.trim();\n    const username:string = (document.getElementById('username_input') as HTMLInputElement).value.trim();\n    const password:string = (document.getElementById('password_input') as HTMLInputElement).value.trim();\n    if (!username || !password || !url) {\n        login_status.textContent = \"Please fill in all fields\";\n        return;\n    }\n    sessionID = await login(url, username, password);\n    if (sessionID === null) {\n        login_status.textContent = \"Login failed\";\n    } else {\n        login_status.textContent = \"Login successful\";\n        document.getElementById('big_login_status').style.display = \"none\";\n        fetchAndDisplay();\n    }\n    if (remember) {\n        localStorage.setItem(\"url\", url);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"password\", password);\n    }\n}\nasync function autoLogin() {\n    const url:string = localStorage.getItem(\"url\");\n    const username:string = localStorage.getItem(\"username\");\n    const password:string = localStorage.getItem(\"password\");\n    if (url && username && password) {\n        (document.getElementById('url_input') as HTMLInputElement).value = url;\n        (document.getElementById('username_input') as HTMLInputElement).value = username;\n        (document.getElementById('password_input') as HTMLInputElement).value = password;\n        loginToServer();\n    }\n}\nautoLogin()\n\n//----------------------------- Show Tasks -----------------------------------\nconst task_list:HTMLElement = document.getElementById('task_list');\n\nasync function fetchAndDisplay():Promise<void> {\n    if (!sessionID) {return}\n    const calendars: any[] = await getCalenders();\n    for (const calendar of calendars) {\n        let calendar_div:HTMLElement = document.createElement('div');\n        const heading = document.createElement('h2');\n        heading.textContent = calendar.displayName;\n        calendar_div.appendChild(heading);\n        const objects = await fetchTasks(calendar);\n        for (const object of objects) {\n            const task = new Task(object.data, object.etag, object.url);\n            calendar_div.appendChild(buildDisplayableTask(task));\n        }\n        task_list.appendChild(calendar_div);\n    }\n}\n\n//----------------------------- Local Tasks -----------------------------------\nconst local_task_list:HTMLElement = document.getElementById('local_task_list');\nlet localTasks:Task[] = null;\n\nasync function saveLocalTasks() {\n    localStorage.setItem(\"local_tasks\", JSON.stringify(localTasks));\n}\nfunction recoverSavedTasks():void {\n    const savedTasks = JSON.parse(localStorage.getItem(\"local_tasks\"));\n    if (savedTasks === null || savedTasks.length === 0) {\n        localTasks = [];\n        localTasks.push(new Task(\"This is your first task!\"));\n    } else {\n        // Reconstruct Task objects from plain objects\n        localTasks = savedTasks.map(taskData => {\n            const task = new Task(taskData.summary);\n            Object.assign(task, taskData);\n            return task;\n        });\n    }\n}\nfunction displaySavedTasks():void {\n    local_task_list.innerHTML = '';\n    for (const task of localTasks) {\n        local_task_list.appendChild(buildDisplayableTask(task));\n    }\n}\nfunction buildDisplayableTask(task: Task, fresh:boolean = false):HTMLElement {\n    let task_div:HTMLElement = document.createElement('div');\n    task_div.className = \"task\";\n    let checkbox:HTMLInputElement = document.createElement('input');\n    checkbox.type = \"checkbox\";\n    checkbox.className = \"task_checkbox\";\n    checkbox.checked = task.done;\n    checkbox.addEventListener('change', (event) => {\n        if (checkbox.checked) {\n            task.setDone();\n        } else {\n            task.setNotDone();\n        }\n        saveLocalTasks();\n    })\n    task_div.appendChild(checkbox);\n    let textSpan:HTMLSpanElement = document.createElement('span');\n    textSpan.textContent = \" \" + task.summary;\n    textSpan.style.width = \"100%\";\n    //Editing\n    let task_edit:HTMLElement = document.createElement('div');\n    task_edit.className = \"popup\";\n    let name_edit_label:HTMLLabelElement = document.createElement('label');\n    let name_edit:HTMLInputElement = document.createElement('input');\n    let delete_edit:HTMLButtonElement = document.createElement('button');\n\n    const name_edit_label_text:HTMLSpanElement = document.createElement('span');\n    name_edit_label_text.textContent = \"Edit Name: \";\n    name_edit_label.appendChild(name_edit_label_text);\n    name_edit_label.appendChild(name_edit);\n    name_edit.value = task.summary;\n    name_edit.addEventListener('change', (event) => {\n        changeTaskName(task, name_edit.value);\n    })\n\n    delete_edit.className = \"button\";\n    delete_edit.textContent = \"Delete Task\";\n    delete_edit.style.color = \"#c21919\";\n    delete_edit.addEventListener('click', (event) => {\n        task_edit.style.display = 'none';\n        document.removeEventListener('keydown', keyHandler);\n        document.removeEventListener('click', clickHandler);\n        localTasks = localTasks.filter(t => t !== task);\n        local_task_list.removeChild(task_div);\n        saveLocalTasks();\n    })\n\n    task_edit.appendChild(name_edit_label);\n    task_edit.appendChild(document.createElement('br'));\n    task_edit.appendChild(document.createElement('br'));\n    task_edit.appendChild(delete_edit);\n    // close/open edit window\n    const keyHandler = (e) => {\n        if (e.key === 'Escape') {\n            task_edit.style.display = 'none';\n            document.removeEventListener('keydown', keyHandler);\n            document.removeEventListener('click', clickHandler);\n            saveLocalTasks();\n            displaySavedTasks();\n        }\n    };\n    const clickHandler = (e) => {\n        if (!task_edit.contains(e.target) && e.target !== textSpan) {\n            task_edit.style.display = 'none';\n            document.removeEventListener('keydown', keyHandler);\n            document.removeEventListener('click', clickHandler);\n            saveLocalTasks();\n            displaySavedTasks();\n        }\n    };\n    textSpan.addEventListener('click', (event) => {\n        task_edit.style.display = \"block\";\n        setTimeout(() => {  //slight delay to avoid immediate triggering\n            document.addEventListener('keydown', keyHandler);\n            document.addEventListener('click', clickHandler);\n        }, 10);\n    });\n    if (fresh) {\n        task_edit.style.display = \"block\";\n        setTimeout(() => {\n            document.addEventListener('keydown', keyHandler);\n            document.addEventListener('click', clickHandler);\n        }, 10);\n    }\n    task_div.appendChild(textSpan);\n    task_div.appendChild(task_edit);\n    return task_div;\n}\ndocument.getElementById('create_local_button').addEventListener('click', (event) => {\n    const task = new Task(\"New Task\");\n    localTasks.push(task);\n    saveLocalTasks();\n    local_task_list.appendChild(buildDisplayableTask(task, true));\n})\n\nrecoverSavedTasks();\ndisplaySavedTasks();\n\n//----------------------------- Buttons -----------------------------------\nconst settingsButton:HTMLButtonElement = document.getElementById('settings_button') as HTMLButtonElement;\nconst popup:HTMLElement = document.getElementById('settings');\n\nsettingsButton.addEventListener('click', () => {\n    popup.style.display = popup.style.display === '' || popup.style.display === 'none' ? 'block' : 'none';\n});\ndocument.addEventListener('click', (event) => {\n    // @ts-ignore\n    if (popup.style.display === 'block' && !popup.contains(event.target) && !settingsButton.contains(event.target)) {\n        popup.style.display = 'none';\n    }\n});\ndocument.addEventListener('keydown', (event) => {\n    if (event.key === 'Escape') {\n        popup.style.display = 'none';\n    }\n});\n\ndocument.getElementById('login_button').addEventListener('click', () => {\n    loginToServer();\n});\ndocument.getElementById('login_remember_button').addEventListener('click', () => {\n    loginToServer(true);\n});\n\n"],"names":["Task","constructor","dataOrSummary","etag","url","this","done","data","summary","ical","regex","matches","match","forEach","uid","trim","created","lastModified","dtstamp","getInfoFromICal","localTask","setDone","setNotDone","proxyURL","sessionID","async","fetchTasks","calender","response","fetch","encodeURIComponent","JSON","stringify","method","ok","json","console","error","statusText","login_status","document","getElementById","loginToServer","remember","textContent","value","username","password","serverUrl","text","login","style","display","calendars","getCalenders","calendar","calendar_div","createElement","heading","displayName","appendChild","objects","object","task","buildDisplayableTask","task_list","fetchAndDisplay","localStorage","setItem","getItem","autoLogin","local_task_list","localTasks","saveLocalTasks","displaySavedTasks","innerHTML","fresh","task_div","className","checkbox","type","checked","addEventListener","event","textSpan","width","task_edit","name_edit_label","name_edit","delete_edit","name_edit_label_text","name","changeTaskName","color","removeEventListener","keyHandler","clickHandler","filter","t","removeChild","e","key","contains","target","setTimeout","push","savedTasks","parse","length","map","taskData","Object","assign","recoverSavedTasks","settingsButton","popup"],"mappings":"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"}