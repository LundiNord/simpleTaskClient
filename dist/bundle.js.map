{"version":3,"file":"bundle.js.map","sources":["../src/task.ts","../src/tasksList.ts"],"sourcesContent":["export class Task {\n    constructor(dataOrSummary: string, etag?: string, url?: string, localTask?: boolean) {\n         if (etag && url) {\n             this.data = dataOrSummary;\n             this.etag = etag;\n             this.url = url;\n             this.summary = getInfoFromICal(dataOrSummary).summary;\n             this.uuid = getInfoFromICal(dataOrSummary).uid;\n             this.created = getInfoFromICal(dataOrSummary).created;\n             this.lastModified = getInfoFromICal(dataOrSummary).lastModified;\n             this.dtstamp = getInfoFromICal(dataOrSummary).dtstamp;\n             this.localTask = false;\n             this.completed = getInfoFromICal(dataOrSummary).completed;\n             this.due = getInfoFromICal(dataOrSummary).due;\n         } else {\n             this.summary = dataOrSummary;\n             this.localTask = true;\n         }\n         if (localTask != null) {\n                this.localTask = localTask;\n         }\n     }\n    private summary: string;\n    private data: string;\n    etag: string;\n    uuid: string;\n    created: string;\n    lastModified: string;\n    dtstamp: string;\n    completed: boolean;\n    private url: string;\n    public readonly localTask: boolean;\n    due: string;    //null or 20250404T150000Z\n    //------------------\n    public setDone():void {\n        if (!this.localTask) {\n            this.data = null;\n        }\n        this.completed = true;\n    }\n    public setNotDone():void {\n        if (!this.localTask) {\n            this.data = null;\n        }\n        this.completed = false;\n    }\n    public getUrl():string {\n        if (this.url) {\n            return this.url;\n        }\n        this.url = this.summary + '_' + Math.random().toString(36).substring(2, 7) + '.ics';\n        return this.url;\n    }\n    public setUrl(url:string):void {\n        this.url = url;\n    }\n    public getData():string {\n        if (this.data) {\n            return this.data;\n        }\n        if(!this.uuid) {\n            this.uuid = crypto.randomUUID();\n        }\n        if (!this.created) {\n            this.created = formatDateForICS();\n        }\n        if (!this.lastModified) {\n            this.lastModified = formatDateForICS();\n        }\n        if (!this.dtstamp) {\n            this.dtstamp = formatDateForICS();\n        }\n        return 'BEGIN:VCALENDAR\\n' + 'VERSION:2.0\\n' +\n            'PRODID:-//Simple Task Client 0.1\\n' +\n            'BEGIN:VTODO\\n' +\n            'UID:' + this.uuid + '\\n' +\n            'CREATED:' + this.created + '\\n' +\n            'LAST-MODIFIED:' + this.lastModified + '\\n' +\n            'DTSTAMP:' + this.dtstamp + '\\n' +\n            'SUMMARY:' + this.summary + '\\n' +\n            (this.completed ? 'STATUS:COMPLETED\\n' : '') +\n            (this.due ? 'DUE:' + this.due + '\\n' : '') +\n            'END:VTODO\\n' +\n            'END:VCALENDAR'\n    }\n    public updateTaskName(name:string):void {\n        this.summary = name;\n        if (!this.localTask) {\n            this.data = null;\n        }\n    }\n    public getSummary():string {\n        return this.summary;\n    }\n    public getDue():string {\n        if (!this.due) {\n            return this.due;\n        }\n        const year = this.due.substring(0, 4);\n        const month = this.due.substring(4, 6);\n        const day = this.due.substring(6, 8);\n        const hour = this.due.substring(9, 11);\n        const minute = this.due.substring(11, 13);\n        return `${year}-${month}-${day}T${hour}:${minute}`;\n    }\n    public setDue(value:string):void {\n        const date = new Date(value);\n        this.due = date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';\n        if (!this.localTask) {\n            this.data = null;\n        }\n    }\n}\n\n//----------------------------- Helpers -----------------------------------\nfunction getInfoFromICal(ical: string):{summary: string, uid: string, created: string, lastModified: string, dtstamp: string, completed: boolean, due: string} {\n    let data = null;\n    const regex = /BEGIN:VTODO[\\s\\S]*?END:VTODO/g;\n    const matches = ical.match(regex);\n    if (matches) {\n        matches.forEach((match) => {\n            const uid:string = RegExp(/UID:(.*)/).exec(match)[1].trim();\n            const created:string = RegExp(/CREATED:(.*)/).exec(match)[1].trim();\n            const lastModified:string = RegExp(/LAST-MODIFIED:(.*)/).exec(match)[1].trim();\n            const dtstamp:string = RegExp(/DTSTAMP:(.*)/).exec(match)[1].trim();\n            const summary:string = RegExp(/SUMMARY:(.*)/).exec(match)[1].trim();\n            const statusMatch = RegExp(/STATUS:(.*)/).exec(match);\n            const status:string = statusMatch ? statusMatch[1].trim() : null;\n            let completed:boolean = false;\n            if (status && status === 'COMPLETED') {\n                completed = true;\n            }\n            const dueMatch = RegExp(/DUE:(.*)/).exec(match);\n            const due:string = dueMatch ? dueMatch[1].trim() : null;\n            data = {uid, created, lastModified, dtstamp, summary, completed, due};\n        });\n    }\n    return data;\n}\nfunction formatDateForICS() {\n    return new Date().toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';\n}\n","import {Task} from \"./task\";\n\n//const proxyURL:string = \"http://localhost:3000\"\nconst proxyURL:string = \"https://task-backend.nyxnord.de\";\nlet sessionID:string = null;\n\n//----------------------------- Proxy Communication -----------------------------------\n\nasync function login(serverUrl: string, username: string, password: string):Promise<string> {\n  const response = await fetch(`${proxyURL}/login?serverUrl=${encodeURIComponent(serverUrl)}&username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`, {\n    method: \"GET\",\n  });\n  if (!response.ok) {\n      console.error(\"Error logging in:\" + response.statusText);\n      return null;\n  } else {\n    return response.text();\n  }\n}\nasync function getCalenders():Promise<any[]> {\n    const response = await fetch(`${proxyURL}/tasklists?sessionID=${encodeURIComponent(sessionID)}`, {\n    method: \"GET\",\n    });\n    if (!response.ok) {\n        console.error(\"Error getting calendars:\" + response.statusText);\n        return null;\n    } else {\n        return response.json();\n    }\n}\nasync function fetchTasks(calender: JSON) {\n     const response = await fetch(`${proxyURL}/tasks?sessionID=${encodeURIComponent(sessionID)}&calender=${encodeURIComponent(JSON.stringify(calender))}`, {\n        method: \"GET\",\n    });\n    if (!response.ok) {\n        console.error(\"Error getting tasks:\" + response.statusText);\n        return null;\n    } else {\n        return response.json();\n    }\n}\nasync function updateRemoteTask(task:Task) {\n    if (!task.localTask) {\n        const response = await fetch(`${proxyURL}/update_task`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                sessionID: sessionID,\n                filename: task.getUrl(),\n                data: task.getData(),\n                etag: task.etag,\n            })\n        });\n        if (response.ok) {\n            task.etag = await response.text();\n        }\n        return response.ok;\n    }\n}\nasync function deleteTask(task:Task, task_div:HTMLElement) {\n    if (task.localTask) {\n        localTasks = localTasks.filter(t => t !== task);\n        local_task_list.removeChild(task_div);\n        await saveLocalTasks();\n    } else {\n        try {\n            const response = await fetch(`${proxyURL}/delete_task`, {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    sessionID: sessionID,\n                    filename: task.getUrl(),\n                    etag: task.etag,\n                })\n            });\n            if (response.ok) {\n                task_div.parentElement.removeChild(task_div);\n                return true;\n            }\n        } catch (err) {\n            console.error(\"Error deleting task:\", err);\n        }\n        return false;\n    }\n}\nasync function createRemoteTask(calendar: any, task: Task) {\n    const response = await fetch(`${proxyURL}/create_task`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            sessionID: sessionID,\n            calendar: calendar,\n            filename: task.getUrl(),\n            data: task.getData(),\n        })\n    });\n    if (response.ok) {\n      task.etag = await response.text();        //ToDo create task on popup close\n      const tasks = await fetchTasks(calendar);\n        for (const object of tasks) {\n            if (object.etag === task.etag) {\n                task.setUrl(object.url);\n            }\n        }\n    }\n    return response.ok;\n}\n\n//----------------------------- Login -----------------------------------\nconst login_status:HTMLElement = document.getElementById('login_status');\n\nasync function loginToServer(remember: boolean = false) {\n    login_status.textContent = \"Login started...\";\n    const url:string = (document.getElementById('url_input') as HTMLInputElement).value.trim();\n    const username:string = (document.getElementById('username_input') as HTMLInputElement).value.trim();\n    const password:string = (document.getElementById('password_input') as HTMLInputElement).value.trim();\n    if (!username || !password || !url) {\n        login_status.textContent = \"Please fill in all fields\";\n        return;\n    }\n    sessionID = await login(url, username, password);\n    if (sessionID === null) {\n        login_status.textContent = \"Login failed\";\n    } else {\n        login_status.textContent = \"Login successful\";\n        document.getElementById('big_login_status').style.display = \"none\";\n        fetchAndDisplay();\n    }\n    if (remember) {\n        localStorage.setItem(\"url\", url);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"password\", password);\n    }\n}\nasync function autoLogin() {\n    const url:string = localStorage.getItem(\"url\");\n    const username:string = localStorage.getItem(\"username\");\n    const password:string = localStorage.getItem(\"password\");\n    if (url && username && password) {\n        (document.getElementById('url_input') as HTMLInputElement).value = url;\n        (document.getElementById('username_input') as HTMLInputElement).value = username;\n        (document.getElementById('password_input') as HTMLInputElement).value = password;\n        loginToServer();\n    }\n}\nautoLogin()\n\n//----------------------------- Show Remote Tasks -----------------------------------\nconst task_list:HTMLElement = document.getElementById('task_list');\n\nasync function fetchAndDisplay():Promise<void> {\n    if (!sessionID) {return}\n    const calendars: any[] = await getCalenders();\n    for (const calendar of calendars) {\n        let calendar_div:HTMLElement = document.createElement('div');\n        const heading = document.createElement('h2');\n        heading.textContent = calendar.displayName;\n        //New Task Button\n        const newTaskButton:HTMLButtonElement = document.createElement('button');\n        newTaskButton.className = 'button';\n        newTaskButton.style.marginLeft = \"70%\";\n        newTaskButton.textContent = \"New Task\";\n        newTaskButton.addEventListener('click', async () => {\n            const task = new Task(\"New Task\", null, null, false);\n            const success:boolean = await createRemoteTask(calendar, task);\n            if (success) {\n                calendar_div.insertBefore(buildDisplayableTask(task, true), calendar_div.lastChild);\n            }\n        });\n        heading.appendChild(newTaskButton);\n        calendar_div.appendChild(heading);\n        //Show done tasks separately\n        let done_div:HTMLElement = document.createElement('div');\n        let done_div_content:HTMLElement = document.createElement('div');\n        done_div_content.className = 'collapsible';\n        let done_div_button:HTMLElement = document.createElement('button');\n        done_div_button.className = 'button';\n        done_div_button.textContent = \"Show Done\";\n        done_div_button.addEventListener('click', async () => {\n            if (done_div_content.style.maxHeight){\n                done_div_content.style.maxHeight = null;\n            } else {\n                done_div_content.style.maxHeight = done_div_content.scrollHeight + \"px\";\n            }\n        })\n        done_div.appendChild(done_div_button);\n        done_div.appendChild(done_div_content);\n        const objects = await fetchTasks(calendar);\n        for (const object of objects) {\n            console.log(object);\n            const task = new Task(object.data, object.etag, object.url);\n            if (task.completed) {\n                done_div_content.appendChild(buildDisplayableTask(task));\n            } else {\n                calendar_div.appendChild(buildDisplayableTask(task));\n            }\n        }\n        calendar_div.appendChild(done_div);\n        task_list.appendChild(calendar_div);\n    }\n}\n\n//----------------------------- Local Tasks -----------------------------------\nconst local_task_list:HTMLElement = document.getElementById('local_task_list');\nlet localTasks:Task[] = null;\n\nasync function saveLocalTasks() {\n    localStorage.setItem(\"local_tasks\", JSON.stringify(localTasks));\n}\nfunction recoverSavedTasks():void {\n    const savedTasks = JSON.parse(localStorage.getItem(\"local_tasks\"));\n    if (savedTasks === null || savedTasks.length === 0) {\n        localTasks = [];\n        localTasks.push(new Task(\"This is your first task!\"));\n    } else {\n        // Reconstruct Task objects from plain objects\n        localTasks = savedTasks.map(taskData => {\n            const task = new Task(taskData.summary);\n            Object.assign(task, taskData);\n            return task;\n        });\n    }\n}\nfunction displaySavedTasks():void {\n    local_task_list.innerHTML = '';\n    for (const task of localTasks) {\n        local_task_list.appendChild(buildDisplayableTask(task));\n    }\n}\n\ndocument.getElementById('create_local_button').addEventListener('click', () => {\n    const task = new Task(\"New Task\");\n    localTasks.push(task);\n    saveLocalTasks();\n    local_task_list.appendChild(buildDisplayableTask(task, true));\n})\n\nrecoverSavedTasks();\ndisplaySavedTasks();\n\n//----------------------------- Build Task -----------------------------------\n\nfunction buildDisplayableTask(task: Task, fresh:boolean = false):HTMLElement {\n    let task_div:HTMLElement = document.createElement('div');\n    task_div.className = \"task\";\n    let checkbox:HTMLInputElement = document.createElement('input');\n    checkbox.type = \"checkbox\";\n    checkbox.className = \"task_checkbox\";\n    checkbox.checked = task.completed;\n    checkbox.addEventListener('change', () => {\n        if (checkbox.checked) {\n            task.setDone();\n            if (sparcle_mode) {\n                unicornAnimation();\n            }\n        } else {\n            task.setNotDone();\n        }\n        updateRemoteTask(task);\n        saveLocalTasks();\n    })\n    task_div.appendChild(checkbox);\n    let textSpan:HTMLSpanElement = document.createElement('span');\n    textSpan.textContent = \" \" + task.getSummary();\n    textSpan.style.width = \"100%\";\n    //Editing\n    let task_edit:HTMLElement = document.createElement('div');\n    task_edit.className = \"popup\";\n    let name_edit_label:HTMLLabelElement = document.createElement('label');\n    let name_edit:HTMLInputElement = document.createElement('input');\n    let due_edit_label:HTMLLabelElement = document.createElement('label');\n    let due_edit:HTMLInputElement = document.createElement('input');\n    let delete_edit:HTMLButtonElement = document.createElement('button');\n\n    const name_edit_label_text:HTMLSpanElement = document.createElement('span');\n    name_edit_label_text.textContent = \"Edit Name: \";\n    name_edit_label.appendChild(name_edit_label_text);\n    name_edit_label.appendChild(name_edit);\n    name_edit.value = task.getSummary();\n    name_edit.addEventListener('change', () => {\n        task.updateTaskName(name_edit.value);\n        textSpan.textContent = \" \" + task.getSummary();\n    })\n\n    delete_edit.className = \"button\";\n    delete_edit.textContent = \"Delete Task\";\n    delete_edit.style.color = \"#c21919\";\n    delete_edit.addEventListener('click', () => {\n        task_edit.style.display = 'none';\n        document.removeEventListener('keydown', keyHandler);\n        document.removeEventListener('click', clickHandler);\n        deleteTask(task, task_div);\n    })\n\n    const due_edit_label_text:HTMLSpanElement = document.createElement('span');\n    due_edit_label_text.textContent = \"Edit Due Date: \";\n    due_edit_label.appendChild(due_edit_label_text);\n    due_edit_label.appendChild(due_edit);\n    due_edit.type = \"datetime-local\";\n    due_edit.value = task.getDue();\n    due_edit.addEventListener('change', () => {\n        task.setDue(due_edit.value);\n    })\n\n    task_edit.appendChild(name_edit_label);\n    task_edit.appendChild(document.createElement('br'));\n    task_edit.appendChild(due_edit_label);\n    task_edit.appendChild(document.createElement('br'));\n    task_edit.appendChild(document.createElement('br'));\n    task_edit.appendChild(delete_edit);\n    // close/open edit window\n    const keyHandler = (e) => {\n        if (e.key === 'Escape') {\n            task_edit.style.display = 'none';\n            document.removeEventListener('keydown', keyHandler);\n            document.removeEventListener('click', clickHandler);\n            updateRemoteTask(task);\n            saveLocalTasks();\n            displaySavedTasks();\n        }\n    };\n    const clickHandler = (e) => {\n        if (!task_edit.contains(e.target) && e.target !== textSpan) {\n            task_edit.style.display = 'none';\n            document.removeEventListener('keydown', keyHandler);\n            document.removeEventListener('click', clickHandler);\n            updateRemoteTask(task);\n            saveLocalTasks();\n            displaySavedTasks();\n        }\n    };\n    textSpan.addEventListener('click', () => {\n        task_edit.style.display = \"block\";\n        setTimeout(() => {  //slight delay to avoid immediate triggering\n            document.addEventListener('keydown', keyHandler);\n            document.addEventListener('click', clickHandler);\n        }, 10);\n    });\n    if (fresh) {\n        task_edit.style.display = \"block\";\n        setTimeout(() => {\n            document.addEventListener('keydown', keyHandler);\n            document.addEventListener('click', clickHandler);\n        }, 10);\n    }\n    task_div.appendChild(textSpan);\n    task_div.appendChild(task_edit);\n    return task_div;\n}\n\n//----------------------------- Ui -----------------------------------\n\nfunction unicornAnimation() {\n    const unicorn = document.getElementById('unicorn');\n    unicorn.style.display = 'block';\n    setTimeout(() => {\n        unicorn.style.display = 'none';\n    }, 3000);\n}\n\n//----------------------------- Buttons -----------------------------------\nconst settingsButton:HTMLButtonElement = document.getElementById('settings_button') as HTMLButtonElement;\nconst popup:HTMLElement = document.getElementById('settings');\n\nsettingsButton.addEventListener('click', () => {\n    popup.style.display = popup.style.display === '' || popup.style.display === 'none' ? 'block' : 'none';\n});\ndocument.addEventListener('click', (event) => {\n    // @ts-ignore\n    if (popup.style.display === 'block' && !popup.contains(event.target) && !settingsButton.contains(event.target)) {\n        popup.style.display = 'none';\n    }\n});\ndocument.addEventListener('keydown', (event) => {\n    if (event.key === 'Escape') {\n        popup.style.display = 'none';\n    }\n});\n\ndocument.getElementById('login_button').addEventListener('click', () => {\n    loginToServer();\n});\ndocument.getElementById('login_remember_button').addEventListener('click', () => {\n    loginToServer(true);\n});\n\ndocument.getElementById('login_forget_button').addEventListener('click', () => {\n    task_list.innerHTML = '';\n    localStorage.removeItem('url');\n    localStorage.removeItem('username');\n    localStorage.removeItem('password');\n    document.getElementById('big_login_status').style.display = \"block\";\n});\nlet sparcle_mode:boolean = false;\ndocument.getElementById('sparcle_button').addEventListener('click', () => {\n    if (sparcle_mode) {\n        document.body.className = 'normal';\n        sparcle_mode = false;\n    } else {\n       document.body.className = 'sparcle';\n         sparcle_mode = true;\n    }\n});\n\n\n\n\n\n\n\n"],"names":["Task","constructor","dataOrSummary","etag","url","localTask","this","data","summary","getInfoFromICal","uuid","uid","created","lastModified","dtstamp","completed","due","setDone","setNotDone","getUrl","Math","random","toString","substring","setUrl","getData","crypto","randomUUID","formatDateForICS","updateTaskName","name","getSummary","getDue","setDue","value","date","Date","toISOString","replace","split","ical","matches","match","forEach","RegExp","exec","trim","statusMatch","status","dueMatch","proxyURL","sessionID","async","fetchTasks","calender","response","fetch","encodeURIComponent","JSON","stringify","method","ok","json","console","error","statusText","updateRemoteTask","task","headers","body","filename","text","createRemoteTask","calendar","tasks","object","login_status","document","getElementById","loginToServer","remember","textContent","username","password","serverUrl","login","style","display","calendars","getCalenders","calendar_div","createElement","heading","displayName","newTaskButton","className","marginLeft","addEventListener","insertBefore","buildDisplayableTask","lastChild","appendChild","done_div","done_div_content","done_div_button","maxHeight","scrollHeight","objects","log","task_list","fetchAndDisplay","localStorage","setItem","getItem","autoLogin","local_task_list","localTasks","saveLocalTasks","displaySavedTasks","innerHTML","fresh","task_div","checkbox","type","checked","sparcle_mode","unicorn","setTimeout","unicornAnimation","textSpan","width","task_edit","name_edit_label","name_edit","due_edit_label","due_edit","delete_edit","name_edit_label_text","color","removeEventListener","keyHandler","clickHandler","parentElement","removeChild","err","filter","t","deleteTask","due_edit_label_text","e","key","contains","target","push","savedTasks","parse","length","map","taskData","Object","assign","recoverSavedTasks","settingsButton","popup","event","removeItem"],"mappings":"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"}